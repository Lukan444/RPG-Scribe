name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: TypeScript type checking
      run: npm run typecheck

    - name: Run linting
      run: npm run lint
      continue-on-error: true

    - name: Run Vitest tests
      run: npm test -- --run --reporter=verbose
      env:
        NODE_ENV: test

    - name: Test coverage
      run: npm run test:coverage
      continue-on-error: true

    - name: Build production
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18.x'
      with:
        name: build-files
        path: build/
        retention-days: 7

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18.x'
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --legacy-peer-deps

    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Check for high-severity vulnerabilities
      run: npm audit --audit-level=high

  quality-gate:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()

    steps:
    - name: Check test results
      if: needs.test.result != 'success'
      run: |
        echo "❌ Tests failed!"
        exit 1

    - name: Check security results
      if: needs.security.result != 'success'
      run: |
        echo "⚠️ Security checks failed!"
        exit 1

    - name: Quality gate passed
      run: echo "✅ All quality checks passed!"
